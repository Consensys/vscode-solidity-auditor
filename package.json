{
    "name": "solidity-visual-auditor",
    "displayName": "Solidity Visual Auditor",
    "description": "Ethereum Solidity Language customized for auditors using Visual Studio Code",
    "keywords": [
        "solidity",
        "ethereum",
        "blockchain",
        "compiler",
        "security"
    ],
    "version": "0.0.22",
    "publisher": "tintinweb",
    "icon": "images/icon.png",
    "engines": {
        "vscode": "^1.26.2"
    },
    "categories": [
        "Programming Languages"
    ],
    "bugs": {
        "url": "https://github.com/tintinweb/vscode-solidity-auditor/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/tintinweb/vscode-solidity-auditor"
    },
    "activationEvents": [
        "onLanguage:solidity"
    ],
    "main": "./src/extension",
    "capabilities": {
        "hoverProvider": "true"
    },
    "contributes": {
        "languages": [
            {
                "id": "solidity",
                "aliases": [
                    "solidity",
                    "solidity"
                ],
                "extensions": [
                    ".sol"
                ],
                "configuration": "./src/language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "solidity",
                "scopeName": "source.solidity.security",
                "path": "./src/syntaxes/solidity.tmLanguage.json",
                "injectTo": [
                    "source.solidity"
                ]
            }
        ],
        "themes": [
            {
                "label": "Solidity Visual Auditor Dark",
                "uiTheme": "vs-dark",
                "path": "./src/themes/OneDarkAuditor.json"
            },
            {
                "label": "Solidity Visual Auditor Solarized Light",
                "uiTheme": "vs",
                "path": "./src/themes/solarized-light-color-theme.json"
            },
            {
                "label": "Solidity Visual Auditor Light (Visual Studio)",
                "uiTheme": "vs",
                "path": "./src/themes/light_vs.json"
            }
        ],
        "commands": [
            {
                "command": "solidity-va.test.createTemplate",
                "title": "Unittest - create stub for current contract",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.surya.mdreport",
                "title": "Surya - generate report",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.surya.describe",
                "title": "Surya - describe",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.surya.graph",
                "title": "Surya - graph",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.surya.inheritance",
                "title": "Surya - show inheritance graph",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.insights.topLevelContracts",
                "title": "Tools - list suggested top level / entry point contracts",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.flaterra",
                "title": "Tools - flatten current file",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.flattenCandidates",
                "title": "Tools - flatten all suggested top level contracts",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.function.signatures",
                "title": "Tools - list function signatures",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.function.signatures.json",
                "title": "Tools - list function signatures (json)",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.function.signatures.forWorkspace.json",
                "title": "Tools - list function signatures for all solidity files in workspace (json)",
                "category": "Solidity Visual Auditor"
            },
            {
                "command": "solidity-va.tools.remix.openExternal",
                "title": "Tools - launch Remix-IDE",
                "category": "Solidity Visual Auditor"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Solidity Visual Auditor configuration",
            "properties": {
                "solidity-va.hover": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable Solidity hover."
                },
                "solidity-va.deco.statevars": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable Solidity statevar decoration"
                },
                "solidity-va.deco.arguments": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable semantic highlighting for function arguments"
                },
                "solidity-va.deco.warn.reserved": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable/Disable warning decoration when overriding reserved names"
                },
                "solidity-va.outline.enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable/Disable outline / symbolprovider"
                },
                "solidity-va.outline.decorations": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to enable/disable Function Mutability/Accessibility decoration in the outline view"
                },
                "solidity-va.outline.inheritance.show": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to show/hide inherited names in the outline view"
                },
                "solidity-va.outline.extras": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to show/hide extras (complexity, state var access) for functions in the outline view"
                },
                "solidity-va.outline.var.storage_annotations": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to show/hide storage annotations for variables in the outline view"
                },
                "solidity-va.outline.pragmas.show": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to show/hide pragmas in the outline view"
                },
                "solidity-va.outline.imports.show": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to show/hide imports in the outline view"
                },
                "solidity-va.parser.parseImports": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to recursively parse imports or not"
                },
                "solidity-va.diagnostics.cdili_json.import": {
                    "type": "boolean",
                    "default": false,
                    "description": "Recursively search for CDILI format *-issues.json from external scanners and visualize findings as diagnostics in vscode"
                },
                "solidity-va.tools.surya.input.contracts": {
                    "type": "string",
                    "enum": [
                        "cached",
                        "workspace"
                    ],
                    "default": "cached",
                    "description": "Define whether surya should take cached files or all contracts in the workspace as input"
                },
                "solidity-va.preview.dot": {
                    "type": "boolean",
                    "default": true,
                    "description": "Open dot output in graphviz rendered form (relies on a graphviz preview extension to be installed)"
                },
                "solidity-va.preview.markdown": {
                    "type": "boolean",
                    "default": false,
                    "description": "Open markdown output in rendered form (relies on a markdown preview extension to be installed)"
                },
                "solidity-va.codelens.enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable/Disable codelens - inline action"
                },
                "solidity-va.mode.active": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable/Disable all active components of this extension (emergency)."
                },
                "solidity-va.uml.options": {
                    "type": "text",
                    "default": "",
                    "description": "Add custom uml options"
                },
                "solidity-va.uml.actors.enable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/Disable actors in uml"
                }
            }
        }
    },
    "extensionDependencies": [
        "tintinweb.graphviz-interactive-preview"
    ],
    "extensionPack": [
        "tintinweb.vscode-solidity-flattener",
        "jebbs.plantuml",
        "tintinweb.vscode-inline-bookmarks"
    ],
    "dependencies": {
        "c3-linearization": "^0.3.0",
        "keccak": "^2.0.0",
        "solidity-parser-diligence": "0.4.15",
        "surya": "0.3.5"
    }
}
